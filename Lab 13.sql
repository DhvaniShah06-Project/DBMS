/*CREATE TABLE AUTHOR(
AUTHORID INT PRIMARY KEY,
AUTHORNAME VARCHAR(100) NOT NULL,
COUNTRY VARCHAR(50)
)
INSERT INTO AUTHOR VALUES
(1,'CHETAN BHAGAT','INDIA'),
(2,'ARUNDHATI ROY','INDIA'),
(3,'AMISH TRIPATHI','INDIA'),
(4,'RUSKIN BOND','INDIA'),
(5,'JHUMPA LAHIRI','INDIA'),
(6,'PAULO COELHO','BRAZIL'),
(7,'SUDHA MURTY','INDIA')
SELECT * FROM AUTHOR

CREATE TABLE PUBLISHER
(
PUBLISHERID INT PRIMARY KEY,
PUBLISHERNAME VARCHAR(100) NOT NULL UNIQUE,
CITY VARCHAR(50) NOT NULL
)
INSERT INTO PUBLISHER VALUES
(1,'RUPA PUBLICATIONS','NEW DELHI'),
(2,'PENGUIN INDIA','GURUGRAM'),
(3,'HARPERCOLLINS INDIA','NOIDA'),
(4,'ALEPH BOOK COMPANY','NEW DELHI')
SELECT * FROM PUBLISHER
CREATE TABLE BOOK
(
BOOKID INT PRIMARY KEY,
TITLE VARCHAR(200) NOT NULL,
AUTHORID INT FOREIGN KEY REFERENCES AUTHOR(AUTHORID) NOT NULL,
PUBLISHERID INT FOREIGN KEY REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
PRICE DECIMAL(8,2) NOT NULL,
PUBLICATIONYEAR INT NOT NULL
)
INSERT INTO BOOK VALUES
(101,'FIVE POINT SOMEONE',1,1,250.00,2004),
(102,'THE GOD OF SMALL THINGS',2,2,350.00,1997),
(103,'IMMORTALS OF MEHULA',3,3,300.00,2010),
(104,'THE BLUE UMBRELLA',4,1,180.00,1980),
(105,'THE LOWLAND',5,2,400.00,2013),
(106,'REVOLUTION 2020',1,1,275.00,2011),
(107,'SITA: WARRIOR OF MITHILA ',3,3,320.00,2017),
(108,'THE ROOM ON THE ROOF',4,4,200.00,1956)
*/

--Part – A: 
--1. List all books with their authors. 
	SELECT TITLE,AUTHORNAME
	FROM BOOK 
	INNER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID

--2. List all books with their publishers. 
	SELECT TITLE,PUBLISHERNAME
	FROM BOOK
	INNER JOIN PUBLISHER
	ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID

--3. List all books with their authors and publishers.
	SELECT TITLE , AUTHORNAME , PUBLISHERNAME
	FROM BOOK
	INNER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID
	INNER JOIN PUBLISHER
	ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID

--4. List all books published after 2010 with their authors and publisher and price. 
	SELECT TITLE,AUTHORNAME,PUBLISHERNAME,PRICE
	FROM BOOK
	INNER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID
	INNER JOIN PUBLISHER
	ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID
	WHERE PUBLICATIONYEAR > 2010

--5. List all authors and the number of books they have written. 
	SELECT AUTHORNAME , COUNT(AUTHOR.AUTHORID)
	FROM BOOK
	INNER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID
	GROUP BY AUTHOR.AUTHORNAME

--6. List all publishers and the total price of books they have published.
	SELECT PUBLISHERNAME , COUNT(PUBLISHER.PUBLISHERID),SUM(PRICE) AS TOTAL_PRICE
	FROM BOOK
	INNER JOIN PUBLISHER
	ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID
	GROUP BY PUBLISHERNAME

--7. List authors who have not written any books. 
	SELECT AUTHORNAME
	FROM BOOK
	RIGHT OUTER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID
	WHERE TITLE IS NULL

		SELECT AUTHORNAME
		FROM BOOK
		RIGHT OUTER JOIN AUTHOR
		ON BOOK.AUTHORID = AUTHOR.AUTHORID
		GROUP BY AUTHORNAME
		HAVING COUNT(TITLE) = 0

--8. Display total number of Books and Average Price of every Author. 
	SELECT AUTHORNAME , COUNT(AUTHOR.AUTHORID) AS NUMBER_OF_BOOKS , AVG(PRICE) AS AVERAGE_PRICE
	FROM BOOK
	INNER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID
	GROUP BY AUTHOR.AUTHORNAME

--9. lists each publisher along with the total number of books they have published, sorted from highest to lowest. 
	SELECT PUBLISHERNAME , COUNT(PUBLISHER.PUBLISHERID) AS NUMBER_OF_BOOKS
	FROM BOOK
	INNER JOIN PUBLISHER
	ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID
	GROUP BY PUBLISHERNAME
	ORDER BY COUNT(PUBLISHER.PUBLISHERID) DESC

--10. Display number of books published each year.
	SELECT PUBLICATIONYEAR,COUNT(BOOKID) AS BOOKS_PUBLISHED
	FROM BOOK
	INNER JOIN PUBLISHER
	ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID
	GROUP BY PUBLICATIONYEAR
 
--Part – B: 
--1. List the publishers whose total book prices exceed 500, ordered by the total price. 
		SELECT 
			PUBLISHERNAME ,
			COUNT(PUBLISHER.PUBLISHERID) AS TOTAL_BOOKS , 
			SUM(PRICE) AS TOTAL_PRICE
		FROM BOOK
		INNER JOIN PUBLISHER
		ON BOOK.PUBLISHERID = PUBLISHER.PUBLISHERID
		GROUP BY PUBLISHERNAME
		HAVING SUM(PRICE) > 500
		ORDER BY TOTAL_PRICE DESC
--2. List most expensive book for each author, sort it with the highest price. 
	SELECT
		AUTHORNAME,
		MAX(PRICE) AS EXPENSIVE_BOOK 
	FROM BOOK
	INNER JOIN AUTHOR
	ON BOOK.AUTHORID = AUTHOR.AUTHORID
	GROUP BY AUTHORNAME
	ORDER BY MAX(PRICE) DESC

--Part – C: Create table as per following schema with proper validation and try to insert data which violate your validation. 
--1. Emp_info(Eid, Ename, Did, Cid, Salary, Experience) 
	--CREATE TABLE EMP_INFO
	--(
	--EID,
	--DID,
	--CID,
	--SALARY
	--EXPERIENCE
	--)
	

--Dept_info(Did, Dname) 
	--CREATE TABLE DEPT_INFO
	--(
	--DID,
	--DNAME
	--)
	
--City_info(Cid, Cname, Did)) 
	--CREATE TABLE CITY_INFO
	--(
	--DID,
	--DNAME
	--)

--District(Did, Dname, Sid) 
	--CREATE TABLE DISTRICT
	--(
	--DID,
	--DNAME,
	--SID
	--)

--State(Sid, Sname, Cid) 
	--CREATE TABLE STATE
	--(
	--SID,
	--SNAME,
	--CID
	--)

--Country(Cid, Cname) 
	--CREATE TABLE COUNTRY
	--(
	--CID,
	--CNAME
	--)

--2. Insert 5 records in each table. 
	
--3. Display employeename, departmentname, Salary, Experience, City, District, State and country of all 
--employees.
SELECT * FROM EMP_INFO
SELECT * FROM DEPT_INFO
SELECT * FROM CITIES_INFO
SELECT * FROM DISTRICT
SELECT * FROM STATES
SELECT * FROM COUNTRY

